- if @transaction && @transaction.errors.any?
  %ul
    - @transaction.errors.full_messages.each do |msg|
      %li
        = msg

- if current_user

  - if current_user.balance_initialised
    Your address is:
    %b
      = current_user.eth_address
    %br
    %br
    Your current balance is:
    %b
      = current_user.balance
    - if current_user.balance.to_i.zero?
      %br
      %br
      Start claming carbon credits and send to others.
    - else
      %br
      %br
      = form_for(:transaction, url: transactions_path) do |f|
        = f.text_field :to_user_id, placeholder: "TO USER ID"
        = f.text_field :amount, placeholder: "AMOUNT"
        = f.submit "Send credits"
      %br
      %br
      You can also upload a comma delimited file containing credit transactions you want to send.
      %br
      The format needs to match the following (headers needs to be specified):
      %br
      %code
        to_user_id,amount
        %br
        1,100
        %br
        2,300

      %br
      %br
      = form_tag(csv_transactions_path, multipart: true) do
        = file_field_tag 'csv'
        = submit_tag "Upload CSV"

      %br
      %br
      You can send credits to an external Ethereum address. If you insert an address that does not exist, the credit will remain in your account.
      = form_tag(external_transactions_path) do |f|
        = text_field_tag :address, nil, placeholder: "ETHEREUM ADDRESS"
        = text_field_tag :amount, nil, placeholder: "AMOUNT"
        = submit_tag "Send credits"


  - if @sent_transactions && @sent_transactions.any?
    %h3 Sent Credit Transactions
    = render partial: 'transactions/transactions', locals: { transactions: @sent_transactions, type: :sent }

  - if @received_transactions && @received_transactions.any?
    %h3 Received Credit Transactions
    = render partial: 'transactions/transactions', locals: { transactions: @received_transactions, type: :received }

  - if @all_user_balances
    %h3 All other user balances
    - @all_user_balances.each do |u|
      = "#{u.email}: "
      %b
        = u.balance
      %br

  - unless current_user.balance_initialised
    %br
    %b
      In order to start testing the system you need the system, you need to get an account created in the backend system.
      = button_to('Let\'Start!', { action: :create }, { data: { confirm: 'Are you sure?', disable_with: 'YES!' } } )

- else -# not logged in

  CarbonNZ is implementing a new web interface in order to allow registered users to send their carbon credit to other registered users.

  %br
  %br

  The service is in a very early stage. It has been released to a whitelist set of IP addresses only, in order to get some feedbacks from real users.

  %br
  %br

  The CarbonNZ web developers would like to hear any security concern around possibility to gain extra credit or send any credit from an account to another by abusing any security vulnerability that might exist.

  %br
  %br

  In order to give the CarbonNZ a try, please
  = link_to "Sign-in", new_user_session_path
  or
  = link_to "Sign-up", new_user_registration_path
